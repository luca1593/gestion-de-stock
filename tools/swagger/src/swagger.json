{
  "swagger" : "2.0",
  "info" : {
    "description" : "Swagger documentation for API Rest de l'application de gestion de stock",
    "version" : "0.0.1-SNAPSHOT",
    "title" : "Swagger documentation for API gestion de stock",
    "contact" : {
      "name" : "Adam Luca",
      "url" : "https://dev-tech.com",
      "email" : "miarinantenaina@gmail.com"
    }
  },
  "basePath" : "http://localhost:8080/",
  "tags" : [ {
    "name" : "v1articles"
  }, {
    "name" : "v1category"
  }, {
    "name" : "v1client"
  }, {
    "name" : "v1commande-client"
  }, {
    "name" : "v1commande-fournisseur"
  }, {
    "name" : "v1entreprise"
  }, {
    "name" : "v1fournisseur"
  }, {
    "name" : "v1mvtstk"
  }, {
    "name" : "v1photos"
  }, {
    "name" : "v1utilisateur"
  }, {
    "name" : "v1vente"
  } ],
  "paths" : {
    "/v1/articles/all" : {
      "get" : {
        "tags" : [ "v1articles" ],
        "summary" : "Renvoie la liste des articles",
        "description" : "Cette methode permet de rechercher toutes les articles dans la BDD",
        "operationId" : "findAll_GET",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "La liste des article / liste vide",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ArticleDto"
              }
            }
          }
        }
      }
    },
    "/v1/articles/code/{codeArticle}" : {
      "get" : {
        "summary" : "Rechercher un article",
        "description" : "Cette methode permet de rechercher un article par son code",
        "operationId" : "findByCodeArticle_GET",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "L'objet article a ete trouver dans la BDD",
            "schema" : {
              "$ref" : "#/definitions/ArticleDto"
            }
          },
          "404" : {
            "description" : "Erreur l'objet article n'a pas ete trouver dans la BDD le code fournie"
          }
        }
      }
    },
    "/v1/articles/create" : {
      "post" : {
        "summary" : "Enregistrement d'un article",
        "description" : "Cette methode permet d'enregidtre ou de modifier un article",
        "operationId" : "save_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "L'objet article creer ou modifier",
            "schema" : {
              "$ref" : "#/definitions/ArticleDto"
            }
          },
          "404" : {
            "description" : "Erreur dans la creation de l'objet article"
          }
        }
      }
    },
    "/v1/articles/delete/{idArticle}" : {
      "delete" : {
        "summary" : "Supprimer un article",
        "description" : "Cette methode permet de supprimer un article par son ID",
        "operationId" : "delete_DELETE",
        "responses" : {
          "200" : {
            "description" : "L'article a ete supprimen dans la BDD"
          }
        }
      }
    },
    "/v1/articles/filtre/category/{idCategore}" : {
      "get" : {
        "tags" : [ "v1articles" ],
        "operationId" : "findAllByCategorie_GET",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "idCategore",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ArticleDto"
              }
            }
          }
        }
      }
    },
    "/v1/articles/historiques/commande-client/{idArticle}" : {
      "get" : {
        "operationId" : "findHistoriqueCommandeClient_GET",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LigneCommandeClientDto"
              }
            }
          }
        }
      }
    },
    "/v1/articles/historiques/commande-fournisseur/{idArticle}" : {
      "get" : {
        "operationId" : "findHistoriqueCommandeFournisseur_GET",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LigneCommandeFournisseurDto"
              }
            }
          }
        }
      }
    },
    "/v1/articles/historiques/vente/{idArticle}" : {
      "get" : {
        "tags" : [ "v1articles" ],
        "operationId" : "findHistoriqueVente_GET",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "idArticle",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LigneVenteDto"
              }
            }
          }
        }
      }
    },
    "/v1/articles/{idArticle}" : {
      "get" : {
        "summary" : "Rechercher un article",
        "description" : "Cette methode permet de rechercher un article par son ID",
        "operationId" : "findById_GET",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "L'objet article a ete trouver dans la BDD",
            "schema" : {
              "$ref" : "#/definitions/ArticleDto"
            }
          },
          "404" : {
            "description" : "Erreur l'objet article n'a pas ete trouver dans la BDD avec l'ID fournie"
          }
        }
      }
    },
    "/v1/category/all" : {
      "get" : {
        "tags" : [ "v1category" ],
        "summary" : "Renvoie la liste des categories",
        "description" : "Cette methode permet de rechercher toutes les categories dans la BDD",
        "operationId" : "findAll_GET",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "La liste des categories / liste vide",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CategoryDto"
              }
            }
          }
        }
      }
    },
    "/v1/category/code/{codeCategory}" : {
      "get" : {
        "summary" : "Rechercher une categorie",
        "description" : "Cette methode permet de rechercher une categorie par son code",
        "operationId" : "findByCodeCategory_GET",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "L'objet categorie a ete trouver dans la BDD",
            "schema" : {
              "$ref" : "#/definitions/CategoryDto"
            }
          },
          "404" : {
            "description" : "Erreur l'objet categorie n'a pas ete trouver dans la BDD le code fournie"
          }
        }
      }
    },
    "/v1/category/create" : {
      "post" : {
        "summary" : "Enregistrement d'une categorie",
        "description" : "Cette methode permet d'enregidtre ou de modifier une categorie",
        "operationId" : "save_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "L'objet categorie creer ou modifier",
            "schema" : {
              "$ref" : "#/definitions/CategoryDto"
            }
          },
          "404" : {
            "description" : "Erreur dans la creation de l'objet categorie"
          }
        }
      }
    },
    "/v1/category/detele/{idCategory}" : {
      "delete" : {
        "tags" : [ "v1category" ],
        "summary" : "Supprimer un article",
        "description" : "Cette methode permet de supprimer un categorie par son ID",
        "operationId" : "delete_DELETE",
        "parameters" : [ {
          "name" : "idCategory",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Le categorie a ete supprimen dans la BDD"
          }
        }
      }
    },
    "/v1/category/{idCategory}" : {
      "get" : {
        "summary" : "Rechercher une categorie",
        "description" : "Cette methode permet de rechercher une categorie par son ID",
        "operationId" : "findById_GET",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "L'objet categorie a ete trouver dans la BDD",
            "schema" : {
              "$ref" : "#/definitions/CategoryDto"
            }
          },
          "404" : {
            "description" : "Erreur l'objet categorie n'a pas ete trouver dans la BDD avec l'ID fournie"
          }
        }
      }
    },
    "/v1/client/all" : {
      "get" : {
        "tags" : [ "v1client" ],
        "summary" : "Renvoie la liste des clients",
        "description" : "Cette methode permet de rechercher toutes les clients dans la BDD",
        "operationId" : "findAll_GET",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "La liste des clients / liste vide",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ClientDto"
              }
            }
          }
        }
      }
    },
    "/v1/client/detele/{idClient}" : {
      "delete" : {
        "tags" : [ "v1client" ],
        "summary" : "Supprimer un client",
        "description" : "Cette methode permet de supprimer un client par son ID",
        "operationId" : "delete_DELETE",
        "parameters" : [ {
          "name" : "idClient",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Le client a ete supprimen dans la BDD"
          }
        }
      }
    },
    "/v1/client/email/{emailClient}" : {
      "get" : {
        "tags" : [ "v1client" ],
        "summary" : "Rechercher un client",
        "description" : "Cette methode permet de rechercher un client par son email",
        "operationId" : "findbyEmailClient_GET",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "emailClient",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "L'objet client a ete trouver dans la BDD",
            "schema" : {
              "$ref" : "#/definitions/ClientDto"
            }
          },
          "404" : {
            "description" : "Erreur l'objet client n'a pas ete trouver dans la BDD l'email fournie"
          }
        }
      }
    },
    "/v1/client/nom/{nomClient}" : {
      "get" : {
        "tags" : [ "v1client" ],
        "summary" : "Rechercher un client",
        "description" : "Cette methode permet de rechercher un client par son nom",
        "operationId" : "findbyNomClient_GET",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "nomClient",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "L'objet client a ete trouver dans la BDD",
            "schema" : {
              "$ref" : "#/definitions/ClientDto"
            }
          },
          "404" : {
            "description" : "Erreur l'objet client n'a pas ete trouver dans la BDD le code fournie"
          }
        }
      }
    },
    "/v1/client/save" : {
      "post" : {
        "tags" : [ "v1client" ],
        "summary" : "Enregistrement d'un client",
        "description" : "Cette methode permet d'enregidtre ou de modifier un client",
        "operationId" : "save_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ClientDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "L'objet client creer ou modifier",
            "schema" : {
              "$ref" : "#/definitions/ClientDto"
            }
          },
          "404" : {
            "description" : "Erreur dans la creation de l'objet client"
          }
        }
      }
    },
    "/v1/client/{idClient}" : {
      "get" : {
        "tags" : [ "v1client" ],
        "summary" : "Rechercher un client",
        "description" : "Cette methode permet de rechercher un client par son ID",
        "operationId" : "findById_GET",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "idClient",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "L'objet client a ete trouver dans la BDD",
            "schema" : {
              "$ref" : "#/definitions/ClientDto"
            }
          },
          "404" : {
            "description" : "Erreur l'objet client n'a pas ete trouver dans la BDD avec l'ID fournie"
          }
        }
      }
    },
    "/v1/commande-client" : {
      "post" : {
        "summary" : "Renvoie la liste des commandes client selon le client",
        "description" : "Cette methode permet de rechercher toutes les commandes client selon le client",
        "operationId" : "findAllByClient_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "La liste des commandes client selon le client / liste vide",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CommandeClientDto"
              }
            }
          }
        }
      }
    },
    "/v1/commande-client/all" : {
      "get" : {
        "tags" : [ "v1commande-client" ],
        "summary" : "Renvoie la liste des commandes client",
        "description" : "Cette methode permet de rechercher toutes les commandes client dans la BDD",
        "operationId" : "findAll_GET",
        "responses" : {
          "200" : {
            "description" : "La liste des commandes client / liste vide",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CommandeClientDto"
              }
            }
          }
        }
      }
    },
    "/v1/commande-client/code/{codeCommandeClient}" : {
      "get" : {
        "summary" : "Rechercher une commande client",
        "description" : "Cette methode permet de rechercher une commande client par son code",
        "operationId" : "findByCodeCommande_GET",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "L'objet commande client a ete trouver dans la BDD",
            "schema" : {
              "$ref" : "#/definitions/CommandeClientDto"
            }
          },
          "404" : {
            "description" : "Erreur l'objet commande client n'a pas ete trouver dans la BDD le code fournie"
          }
        }
      }
    },
    "/v1/commande-client/create/{dateCommandeClient}" : {
      "post" : {
        "tags" : [ "v1commande-client" ],
        "summary" : "Enregistrement d'une commande client",
        "description" : "Cette methode permet d'enregidtre ou de modifier une commande client",
        "operationId" : "save_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CommandeClientDto"
          }
        }, {
          "name" : "dateCommandeClient",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "L'objet commande client creer ou modifier",
            "schema" : {
              "$ref" : "#/definitions/CommandeClientDto"
            }
          },
          "404" : {
            "description" : "Erreur dans la creation de l'objet commande client"
          }
        }
      }
    },
    "/v1/commande-client/date/{dateCommandeClient}" : {
      "get" : {
        "summary" : "Rechercher liste des commandes client par date",
        "description" : "Cette methode permet de rechercher liste des commandes client par date",
        "operationId" : "findByDateCommande_GET",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Aucune commande client n'a ete trouver dans la BDD",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CommandeClientDto"
              }
            }
          },
          "404" : {
            "description" : "Erreur aucune commande client n'a pas ete trouver dans la BDD pendant la date fournie"
          }
        }
      }
    },
    "/v1/commande-client/delete/article/{idCommande}/{idLigneCommande}" : {
      "delete" : {
        "operationId" : "deleteArticle_DELETE",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "L'article de la commande client a bien ete supprimer",
            "schema" : {
              "$ref" : "#/definitions/CommandeClientDto"
            }
          },
          "404" : {
            "description" : "Erreur l'etat commande client ne peut pas etre modifier"
          }
        }
      }
    },
    "/v1/commande-client/delete/{idCommandeClient}" : {
      "delete" : {
        "tags" : [ "v1commande-client" ],
        "summary" : "Supprimer une commande client",
        "description" : "Cette methode permet de supprimer une commande client par son ID",
        "operationId" : "delete_DELETE",
        "parameters" : [ {
          "name" : "idCommandeClient",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "La commande client a ete supprimen dans la BDD"
          }
        }
      }
    },
    "/v1/commande-client/list/ligne-commande/{idCommande}" : {
      "get" : {
        "summary" : "Renvoie la liste des lignes de commande client",
        "description" : "Cette methode permet de rechercher la liste des lignes de commande client par l'id de la commande",
        "operationId" : "findAllLigneCommandeClient_GET",
        "responses" : {
          "200" : {
            "description" : "La liste des commandes client / liste vide",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LigneCommandeClientDto"
              }
            }
          }
        }
      }
    },
    "/v1/commande-client/list/linge-commande/{idCommande}" : {
      "get" : {
        "tags" : [ "v1commande-client" ],
        "operationId" : "findAllByCommandeClient_GET",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "idCommande",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Les lignes de commante de la commande client ont bien ete trouver",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LigneCommandeClientDto"
              }
            }
          },
          "404" : {
            "description" : "Erreur les lignes de commande client n'ont pas ete trouver"
          }
        }
      }
    },
    "/v1/commande-client/update/article/{idCommande}/{idLigneCommande}/{newIdArticle}" : {
      "patch" : {
        "tags" : [ "v1commande-client" ],
        "operationId" : "updateArticle_PATCH",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "idCommande",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "idLigneCommande",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "newIdArticle",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "L'article de la commande client a bien ete modifier",
            "schema" : {
              "$ref" : "#/definitions/CommandeClientDto"
            }
          },
          "404" : {
            "description" : "Erreur l'etat commande client ne peut pas etre modifier"
          }
        }
      }
    },
    "/v1/commande-client/update/client/{idCommande}/{idClient}" : {
      "patch" : {
        "tags" : [ "v1commande-client" ],
        "operationId" : "updateClient_PATCH",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "idCommande",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "idClient",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Le client de la commande client a bien ete modifier",
            "schema" : {
              "$ref" : "#/definitions/CommandeClientDto"
            }
          },
          "404" : {
            "description" : "Erreur l'etat commande client ne peut pas etre modifier"
          }
        }
      }
    },
    "/v1/commande-client/update/etat/{idCommande}/{etatCommande}" : {
      "patch" : {
        "tags" : [ "v1commande-client" ],
        "operationId" : "updateEtatCommande_PATCH",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "idCommande",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "etatCommande",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "enum" : [ "EN_PREPARATIOM", "VALIDEE", "LIVREE" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "L'etat de la commande client a bien ete modifier",
            "schema" : {
              "$ref" : "#/definitions/CommandeClientDto"
            }
          },
          "404" : {
            "description" : "Erreur l'etat commande client ne peut pas etre modifier"
          }
        }
      }
    },
    "/v1/commande-client/update/quantite/{idCommande}/{idLigneCommande}/{quantite}" : {
      "patch" : {
        "tags" : [ "v1commande-client" ],
        "operationId" : "updateQuantiterCommande_PATCH",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "idCommande",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "idLigneCommande",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "quantite",
          "in" : "path",
          "required" : true,
          "type" : "number"
        } ],
        "responses" : {
          "200" : {
            "description" : "La quantite de la commande client a bien ete modifier",
            "schema" : {
              "$ref" : "#/definitions/CommandeClientDto"
            }
          },
          "404" : {
            "description" : "Erreur l'etat commande client ne peut pas etre modifier"
          }
        }
      }
    },
    "/v1/commande-client/{idCommandeClient}" : {
      "get" : {
        "summary" : "Rechercher une commande client",
        "description" : "Cette methode permet de rechercher une commande client par son ID",
        "operationId" : "findById_GET",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "L'objet commande client a ete trouver dans la BDD",
            "schema" : {
              "$ref" : "#/definitions/CommandeClientDto"
            }
          },
          "404" : {
            "description" : "Erreur l'objet commande client n'a pas ete trouver dans la BDD avec l'ID fournie"
          }
        }
      }
    },
    "/v1/commande-fournisseur" : {
      "post" : {
        "tags" : [ "v1commande-fournisseur" ],
        "summary" : "Renvoie la liste des commandes fournisseur selon le fournisseur",
        "description" : "Cette methode permet de rechercher toutes les commandes fournisseur selon le fournisseur",
        "operationId" : "findAllByFournisseur_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FournisseurDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "La liste des commandes fournisseur selon le fournisseur / liste vide",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CommandeFournisseurDto"
              }
            }
          }
        }
      }
    },
    "/v1/commande-fournisseur/all" : {
      "get" : {
        "tags" : [ "v1commande-fournisseur" ],
        "summary" : "Renvoie la liste des commandes fournisseur",
        "description" : "Cette methode permet de rechercher toutes les commandes fournisseur dans la BDD",
        "operationId" : "findAll_GET",
        "responses" : {
          "200" : {
            "description" : "La liste des commandes fournisseur / liste vide",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CommandeFournisseurDto"
              }
            }
          }
        }
      }
    },
    "/v1/commande-fournisseur/code/{codeCommandeFournisseur}" : {
      "get" : {
        "tags" : [ "v1commande-fournisseur" ],
        "summary" : "Rechercher une commande fournisseur",
        "description" : "Cette methode permet de rechercher une commande fournisseur par son code",
        "operationId" : "findByCodeCommande_GET",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "codeCommandeFournisseur",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "L'objet commande fournisseur a ete trouver dans la BDD",
            "schema" : {
              "$ref" : "#/definitions/CommandeFournisseurDto"
            }
          },
          "404" : {
            "description" : "Erreur l'objet commande fournisseur n'a pas ete trouver dans la BDD le code fournie"
          }
        }
      }
    },
    "/v1/commande-fournisseur/create/{dateCommandeFournisseur}" : {
      "post" : {
        "tags" : [ "v1commande-fournisseur" ],
        "summary" : "Enregistrement d'une commande fournisseur",
        "description" : "Cette methode permet d'enregidtre ou de modifier une commande fournisseur",
        "operationId" : "save_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CommandeFournisseurDto"
          }
        }, {
          "name" : "dateCommandeFournisseur",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "L'objet commande fournisseur creer ou modifier",
            "schema" : {
              "$ref" : "#/definitions/CommandeFournisseurDto"
            }
          },
          "404" : {
            "description" : "Erreur dans la creation de l'objet commande fournisseur"
          }
        }
      }
    },
    "/v1/commande-fournisseur/date/{dateCommandeFournisseur}" : {
      "get" : {
        "tags" : [ "v1commande-fournisseur" ],
        "summary" : "Rechercher liste des commandes fournisseur par date",
        "description" : "Cette methode permet de rechercher liste des commandes fournisseur par date",
        "operationId" : "findByDateCommande_GET",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "dateCommandeFournisseur",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Aucune commande fournisseur n'a ete trouver dans la BDD",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CommandeFournisseurDto"
              }
            }
          },
          "404" : {
            "description" : "Erreur aucune commande fournisseur n'a pas ete trouver dans la BDD pendant la date fournie"
          }
        }
      }
    },
    "/v1/commande-fournisseur/delete/article/{idCommande}/{idLigneCommande}" : {
      "delete" : {
        "summary" : "Suppression d'un articl d'une commande fournisseur",
        "description" : "Cette methode permet de supprimer un article sur 'une commande fournisseur par son id",
        "operationId" : "deleteArticle_DELETE",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "L'article de la commande fournisseur a ete supprimer avec success",
            "schema" : {
              "$ref" : "#/definitions/CommandeFournisseurDto"
            }
          },
          "404" : {
            "description" : "Erreur lors de la suppression de la commande fournisseur"
          }
        }
      }
    },
    "/v1/commande-fournisseur/delete/{idCommandeFournisseur}" : {
      "delete" : {
        "summary" : "Supprimer une commande client",
        "description" : "Cette methode permet de supprimer une commande fournisseur par son ID",
        "operationId" : "delete_DELETE",
        "responses" : {
          "200" : {
            "description" : "La commande fournisseur a ete supprimen dans la BDD"
          }
        }
      }
    },
    "/v1/commande-fournisseur/list/ligne-commande/{idCommande}" : {
      "get" : {
        "tags" : [ "v1commande-fournisseur" ],
        "summary" : "Recherche de la liste des lignes de commande d'une commande fournisseur",
        "description" : "Cette methode permet de rechercher la liste des lignes de commande d'une commande fournisseur par son id",
        "operationId" : "findAllByCommandeFournisseur_GET",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "idCommande",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Liste des lignes de commande fournisseur a ete trouver avec succesr",
            "schema" : {
              "$ref" : "#/definitions/CommandeFournisseurDto"
            }
          },
          "404" : {
            "description" : "Erreur lors de la recherche de la liste des lignes de commande fournisseur"
          }
        }
      }
    },
    "/v1/commande-fournisseur/update/article/{idCommande}/{idLigneCommande}/{newIdArticle}" : {
      "patch" : {
        "summary" : "Mise a jour de l'article d'une commande fournisseur",
        "description" : "Cette methode permet de mettre a jour l'article d'une commande fournisseur par son id",
        "operationId" : "updateArticle_PATCH",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "L'article de la commande fournisseur a ete mise a jour",
            "schema" : {
              "$ref" : "#/definitions/CommandeFournisseurDto"
            }
          },
          "404" : {
            "description" : "Erreur lors de la mise a jour de l'article de la commande fournisseur"
          }
        }
      }
    },
    "/v1/commande-fournisseur/update/etat/{idCommande}/{etatCommande}" : {
      "patch" : {
        "summary" : "Mise a jour de l'etat d'une commande fournisseur",
        "description" : "Cette methode permet de mettre a jour l'etat d'une commande fournisseur par son id",
        "operationId" : "updateEtatCommande_PATCH",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "L'etat de la commande fournisseur a ete mise a jour",
            "schema" : {
              "$ref" : "#/definitions/CommandeFournisseurDto"
            }
          },
          "404" : {
            "description" : "Erreur lors de la mise a jour de l'etat de la commande fournisseur"
          }
        }
      }
    },
    "/v1/commande-fournisseur/update/fournisseur/{idCommande}/{idFournisseur}" : {
      "patch" : {
        "tags" : [ "v1commande-fournisseur" ],
        "summary" : "Mise a jour du fournisseur d'une commande fournisseur",
        "description" : "Cette methode permet de mettre a jour le fournisseur d'une commande fournisseur par son id",
        "operationId" : "updateFournisseur_PATCH",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "idCommande",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "idFournisseur",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Le fournisseur de la commande fournisseur a ete mise a jour",
            "schema" : {
              "$ref" : "#/definitions/CommandeFournisseurDto"
            }
          },
          "404" : {
            "description" : "Erreur lors de la mise a jour du fournisseur de la commande fournisseur"
          }
        }
      }
    },
    "/v1/commande-fournisseur/update/quantite/{idCommande}/{idLigneCommande}/{quantite}" : {
      "patch" : {
        "tags" : [ "v1commande-fournisseur" ],
        "summary" : "Mise a jour de la quantite d'une commande fournisseur",
        "description" : "Cette methode permet de mettre a jour la quantite d'une commande fournisseur par son id",
        "operationId" : "updateQuantiterCommande_PATCH",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "idCommande",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "idLigneCommande",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "quantite",
          "in" : "path",
          "required" : true,
          "type" : "number"
        } ],
        "responses" : {
          "200" : {
            "description" : "La quantite de la commande fournisseur a ete mise a jour",
            "schema" : {
              "$ref" : "#/definitions/CommandeFournisseurDto"
            }
          },
          "404" : {
            "description" : "Erreur lors de la mise a jour de la quantite de la commande fournisseur"
          }
        }
      }
    },
    "/v1/commande-fournisseur/{idCommandeFournisseur}" : {
      "get" : {
        "tags" : [ "v1commande-fournisseur" ],
        "summary" : "Rechercher une commande fournisseur",
        "description" : "Cette methode permet de rechercher une commande fournisseur par son ID",
        "operationId" : "findById_GET",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "idCommandeFournisseur",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "L'objet commande fournisseur a ete trouver dans la BDD",
            "schema" : {
              "$ref" : "#/definitions/CommandeFournisseurDto"
            }
          },
          "404" : {
            "description" : "Erreur l'objet commande fournisseur n'a pas ete trouver dans la BDD avec l'ID fournie"
          }
        }
      }
    },
    "/v1/entreprise/all" : {
      "get" : {
        "tags" : [ "v1entreprise" ],
        "summary" : "Renvoie la liste des entreprises",
        "description" : "Cette methode permet de rechercher toutes les entreprises dans la BDD",
        "operationId" : "findAll_GET",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "La liste des clients / liste vide",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/EntrepriseDto"
              }
            }
          }
        }
      }
    },
    "/v1/entreprise/create" : {
      "post" : {
        "tags" : [ "v1entreprise" ],
        "summary" : "Enregistrement d'une entreprise",
        "description" : "Cette methode permet d'enregidtre ou de modifier une entreprise",
        "operationId" : "save_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/EntrepriseDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "L'objet client creer ou modifier",
            "schema" : {
              "$ref" : "#/definitions/EntrepriseDto"
            }
          },
          "404" : {
            "description" : "Erreur dans la creation de l'objet client"
          }
        }
      }
    },
    "/v1/entreprise/delete{idEntreprise}" : {
      "delete" : {
        "tags" : [ "v1entreprise" ],
        "summary" : "Supprimer un entreprise",
        "description" : "Cette methode permet de supprimer une entreprise par son ID",
        "operationId" : "delete_DELETE",
        "parameters" : [ {
          "name" : "idEntreprise",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "L'entreprise a ete supprimen dans la BDD"
          }
        }
      }
    },
    "/v1/entreprise/email/{emailEntreprise}" : {
      "get" : {
        "summary" : "Rechercher un entreprise",
        "description" : "Cette methode permet de rechercher une entreprise par son email",
        "operationId" : "findByEmailEntreprise_GET",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "L'objet entreprise a ete trouver dans la BDD",
            "schema" : {
              "$ref" : "#/definitions/EntrepriseDto"
            }
          },
          "404" : {
            "description" : "Erreur l'objet entreprise n'a pas ete trouver dans la BDD l'email fournie"
          }
        }
      }
    },
    "/v1/entreprise/nom{nomEntreprise}" : {
      "get" : {
        "tags" : [ "v1entreprise" ],
        "summary" : "Rechercher un entreprise",
        "description" : "Cette methode permet de rechercher une entreprise par son nom",
        "operationId" : "findByNomEntreprise_GET",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "nomEntreprise",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "L'objet entreprise a ete trouver dans la BDD",
            "schema" : {
              "$ref" : "#/definitions/EntrepriseDto"
            }
          },
          "404" : {
            "description" : "Erreur l'objet entreprise n'a pas ete trouver dans la BDD le code fournie"
          }
        }
      }
    },
    "/v1/entreprise/{idEntreprise}" : {
      "get" : {
        "tags" : [ "v1entreprise" ],
        "summary" : "Rechercher un entreprise",
        "description" : "Cette methode permet de rechercher un entreprise par son ID",
        "operationId" : "findById_GET",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "idEntreprise",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "L'objet entreprise a ete trouver dans la BDD",
            "schema" : {
              "$ref" : "#/definitions/EntrepriseDto"
            }
          },
          "404" : {
            "description" : "Erreur l'objet entreprise n'a pas ete trouver dans la BDD avec l'ID fournie"
          }
        }
      }
    },
    "/v1/fournisseur/all" : {
      "get" : {
        "summary" : "Renvoie la liste des fournisseurs",
        "description" : "Cette methode permet de rechercher toutes les fournisseurs dans la BDD",
        "operationId" : "findAll_GET",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "La liste des clients / liste vide",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/FournisseurDto"
              }
            }
          }
        }
      }
    },
    "/v1/fournisseur/create" : {
      "post" : {
        "summary" : "Enregistrement d'un fournisseur",
        "description" : "Cette methode permet d'enregidtre ou de modifier un fournisseur",
        "operationId" : "save_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "L'objet fournisseur creer ou modifier",
            "schema" : {
              "$ref" : "#/definitions/FournisseurDto"
            }
          },
          "404" : {
            "description" : "Erreur dans la creation de l'objet fournisseur"
          }
        }
      }
    },
    "/v1/fournisseur/detele/{idFournisseur}" : {
      "delete" : {
        "summary" : "Supprimer un fournisseur",
        "description" : "Cette methode permet de supprimer un fournisseur par son ID",
        "operationId" : "delete_DELETE",
        "responses" : {
          "200" : {
            "description" : "Le fournisseur a ete supprimer dans la BDD"
          }
        }
      }
    },
    "/v1/fournisseur/email/{emailFournisseur}" : {
      "get" : {
        "tags" : [ "v1fournisseur" ],
        "summary" : "Rechercher un fournisseur",
        "description" : "Cette methode permet de rechercher une fournisseur par son email",
        "operationId" : "findByEmailFournisseur_GET",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "emailFournisseur",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "L'objet fournisseur a ete trouver dans la BDD",
            "schema" : {
              "$ref" : "#/definitions/FournisseurDto"
            }
          },
          "404" : {
            "description" : "Erreur l'objet fournisseur n'a pas ete trouver dans la BDD l'email fournie"
          }
        }
      }
    },
    "/v1/fournisseur/nom/{nomFournisseur}" : {
      "get" : {
        "tags" : [ "v1fournisseur" ],
        "summary" : "Rechercher un fournisseur",
        "description" : "Cette methode permet de rechercher un fournisseur par son nom",
        "operationId" : "findByNomFournisseur_GET",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "nomFournisseur",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "L'objet fournisseur a ete trouver dans la BDD",
            "schema" : {
              "$ref" : "#/definitions/FournisseurDto"
            }
          },
          "404" : {
            "description" : "Erreur l'objet fournisseur n'a pas ete trouver dans la BDD le code fournie"
          }
        }
      }
    },
    "/v1/fournisseur/{idFournisseur}" : {
      "get" : {
        "tags" : [ "v1fournisseur" ],
        "summary" : "Rechercher un fournisseur",
        "description" : "Cette methode permet de rechercher un fournisseur par son ID",
        "operationId" : "findById_GET",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "idFournisseur",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "L'objet fournisseur a ete trouver dans la BDD",
            "schema" : {
              "$ref" : "#/definitions/FournisseurDto"
            }
          },
          "404" : {
            "description" : "Erreur l'objet fournisseur n'a pas ete trouver dans la BDD avec l'ID fournie"
          }
        }
      }
    },
    "/v1/home" : {
      "get" : {
        "operationId" : "home_GET",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/v1/mvtstk/all" : {
      "get" : {
        "tags" : [ "v1mvtstk" ],
        "summary" : "Renvoie la liste des mouvements de stock",
        "description" : "Cette methode permet de rechercher toutes les mouvements de stock dans la BDD",
        "operationId" : "findAll_GET",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "La liste des mouvements de stock / liste vide",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/MvtStkDto"
              }
            }
          }
        }
      }
    },
    "/v1/mvtstk/correction-neg" : {
      "post" : {
        "operationId" : "correctionMvtStkNeg_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/MvtStkDto"
            }
          }
        }
      }
    },
    "/v1/mvtstk/correction-pos" : {
      "post" : {
        "tags" : [ "v1mvtstk" ],
        "operationId" : "correctionMvtStkPos_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MvtStkDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/MvtStkDto"
            }
          }
        }
      }
    },
    "/v1/mvtstk/date/{dateMvtStk}" : {
      "get" : {
        "tags" : [ "v1mvtstk" ],
        "summary" : "Rechercher une liste mouvements de stock",
        "description" : "Cette methode permet de rechercher une liste dd mouvements de stock par date",
        "operationId" : "findMvtStkByDateMvt_GET",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "nomClient",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "L'objet mouvements de stock a ete trouver dans la BDD",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/MvtStkDto"
              }
            }
          },
          "404" : {
            "description" : "Erreur l'objet mouvements de stock n'a pas ete trouver dans la BDD pendant la date fournie"
          }
        }
      }
    },
    "/v1/mvtstk/detele/{typeMvt}" : {
      "delete" : {
        "tags" : [ "v1mvtstk" ],
        "summary" : "Supprimer une commande client",
        "description" : "Cette methode permet de supprimer un mouvement de stock par son ID",
        "operationId" : "delete_DELETE",
        "parameters" : [ {
          "name" : "typeMvt",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Le mouvement de stock a ete supprimen dans la BDD"
          }
        }
      }
    },
    "/v1/mvtstk/entre" : {
      "post" : {
        "operationId" : "entreMvtStk_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/MvtStkDto"
            }
          }
        }
      }
    },
    "/v1/mvtstk/filter/article/{idArticle}" : {
      "get" : {
        "tags" : [ "v1mvtstk" ],
        "operationId" : "mvtStkArticle_GET",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "idArticle",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/MvtStkDto"
              }
            }
          }
        }
      }
    },
    "/v1/mvtstk/save" : {
      "post" : {
        "tags" : [ "v1mvtstk" ],
        "summary" : "Enregistrement d'un mouvement de stock",
        "description" : "Cette methode permet d'enregidtre ou de modifier un mouvement de stock",
        "operationId" : "save_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MvtStkDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "L'objet mouvement de stock fournisseur creer ou modifier",
            "schema" : {
              "$ref" : "#/definitions/MvtStkDto"
            }
          },
          "404" : {
            "description" : "Erreur dans la creation de l'objet mouvement de stock"
          }
        }
      }
    },
    "/v1/mvtstk/sortie" : {
      "post" : {
        "tags" : [ "v1mvtstk" ],
        "operationId" : "sortieMvtStk_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MvtStkDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/MvtStkDto"
            }
          }
        }
      }
    },
    "/v1/mvtstk/stockreel/{idArticle}" : {
      "get" : {
        "tags" : [ "v1mvtstk" ],
        "operationId" : "stockReelArticle_GET",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "idArticle",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "number"
            }
          }
        }
      }
    },
    "/v1/mvtstk/type/{typeMvt}" : {
      "get" : {
        "summary" : "Rechercher liste des mouvements de stock par type",
        "description" : "Cette methode permet de rechercher liste des mouvements de stock par type",
        "operationId" : "findMvtStkByType_GET",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Aucun mouvement de stock n'a ete trouver dans la BDD",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/MvtStkDto"
              }
            }
          },
          "404" : {
            "description" : "Erreur aucun mouvement de stock n'a pas ete trouver dans la BDD pendant la date fournie"
          }
        }
      }
    },
    "/v1/mvtstk/{idMvtstk}" : {
      "get" : {
        "tags" : [ "v1mvtstk" ],
        "summary" : "Rechercher un mouvement de stock",
        "description" : "Cette methode permet de rechercher un mouvement de stock par son ID",
        "operationId" : "findById_GET",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "idMvtstk",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "L'objet commande fournisseur a ete trouver dans la BDD",
            "schema" : {
              "$ref" : "#/definitions/MvtStkDto"
            }
          },
          "404" : {
            "description" : "Erreur l'objet commande fournisseur n'a pas ete trouver dans la BDD avec l'ID fournie"
          }
        }
      }
    },
    "/v1/photos/{context}/{id}/{title}" : {
      "post" : {
        "operationId" : "savePhoto_POST",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object"
            }
          }
        }
      }
    },
    "/v1/utilisateur/all" : {
      "get" : {
        "tags" : [ "v1utilisateur" ],
        "summary" : "Renvoie la liste des utilisateurs",
        "description" : "Cette methode permet de rechercher toutes les utilisateurs dans la BDD",
        "operationId" : "findAll_GET",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "La liste des clients / liste vide",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/UtilisateurDto"
              }
            }
          }
        }
      }
    },
    "/v1/utilisateur/changer-mot-de-passe" : {
      "post" : {
        "summary" : "Renvoie un profil utilisateur",
        "description" : "Cette methode permet de changer le mot de passe de l'utilisateurs dans la BDD",
        "operationId" : "changerMotDePasse_POST",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Mot de passe changer avec succes",
            "schema" : {
              "$ref" : "#/definitions/UtilisateurDto"
            }
          },
          "404" : {
            "description" : "Erreur : Le mot de passe ne peut pas etre modifier"
          }
        }
      }
    },
    "/v1/utilisateur/detele/{idUtilisateur}" : {
      "delete" : {
        "summary" : "Supprimer un utilisateur",
        "description" : "Cette methode permet de supprimer un utilisateur par son ID",
        "operationId" : "delete_DELETE",
        "responses" : {
          "200" : {
            "description" : "Utilisateur supprimer avec success"
          }
        }
      }
    },
    "/v1/utilisateur/email/{emailUtilisateur}" : {
      "get" : {
        "summary" : "Rechercher un utilisateur",
        "description" : "Cette methode permet de rechercher une utilisateur par son email",
        "operationId" : "findByEmailUtilisateur_GET",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "L'objet utilisateur a ete trouver dans la BDD",
            "schema" : {
              "$ref" : "#/definitions/UtilisateurDto"
            }
          },
          "404" : {
            "description" : "Erreur l'objet utilisateur n'a pas ete trouver dans la BDD l'email fournie"
          }
        }
      }
    },
    "/v1/utilisateur/nom/{nomUtilisateur}" : {
      "get" : {
        "summary" : "Rechercher un utilisateur",
        "description" : "Cette methode permet de rechercher un utilisateur par son nom",
        "operationId" : "findByNomUtilisateur_GET",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "L'objet utilisateur a ete trouver dans la BDD",
            "schema" : {
              "$ref" : "#/definitions/UtilisateurDto"
            }
          },
          "404" : {
            "description" : "Erreur l'objet utilisateur n'a pas ete trouver dans la BDD le code fournie"
          }
        }
      }
    },
    "/v1/utilisateur/save" : {
      "post" : {
        "tags" : [ "v1utilisateur" ],
        "summary" : "Enregistrement d'un utilisateur",
        "description" : "Cette methode permet d'enregidtre ou de modifier un utilisateur",
        "operationId" : "save_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UtilisateurDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "L'objet utilisateur creer ou modifier",
            "schema" : {
              "$ref" : "#/definitions/UtilisateurDto"
            }
          },
          "404" : {
            "description" : "Erreur dans la creation de l'objet utilisateur"
          }
        }
      }
    },
    "/v1/utilisateur/{idUtilisateur}" : {
      "get" : {
        "summary" : "Rechercher un utilisateur",
        "description" : "Cette methode permet de rechercher un utilisateur par son ID",
        "operationId" : "findById_GET",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "L'objet utilisateur a ete trouver dans la BDD",
            "schema" : {
              "$ref" : "#/definitions/UtilisateurDto"
            }
          },
          "404" : {
            "description" : "Erreur l'objet utilisateur n'a pas ete trouver dans la BDD avec l'ID fournie"
          }
        }
      }
    },
    "/v1/vente/all" : {
      "get" : {
        "tags" : [ "v1vente" ],
        "summary" : "Renvoie la liste des ventes",
        "description" : "Cette methode permet de rechercher toutes les ventes dans la BDD",
        "operationId" : "findAll_GET",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "La liste des ventes / liste vide",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/VenteDto"
              }
            }
          }
        }
      }
    },
    "/v1/vente/code/{codeVente}" : {
      "get" : {
        "tags" : [ "v1vente" ],
        "summary" : "Rechercher une vente",
        "description" : "Cette methode permet de rechercher une vente par son code",
        "operationId" : "findByCodeVente_GET",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "codeVente",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "L'objet vente a ete trouver dans la BDD",
            "schema" : {
              "$ref" : "#/definitions/VenteDto"
            }
          },
          "404" : {
            "description" : "Erreur l'objet vente n'a pas ete trouver dans la BDD le code fournie"
          }
        }
      }
    },
    "/v1/vente/date/{dateVente}" : {
      "get" : {
        "tags" : [ "v1vente" ],
        "summary" : "Rechercher liste des ventes par date",
        "description" : "Cette methode permet de rechercher liste des ventes par date",
        "operationId" : "findByDateVente_GET",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "dateVente",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Aucune vente n'a ete trouver dans la BDD",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/VenteDto"
              }
            }
          },
          "404" : {
            "description" : "Erreur aucune vente n'a pas ete trouver dans la BDD pendant la date fournie"
          }
        }
      }
    },
    "/v1/vente/detele/{idVente}" : {
      "delete" : {
        "summary" : "Supprimer une vente",
        "description" : "Cette methode permet de supprimer un article par son ID",
        "operationId" : "delete_DELETE",
        "responses" : {
          "200" : {
            "description" : "La vente a ete supprimen dans la BDD"
          }
        }
      }
    },
    "/v1/vente/save" : {
      "post" : {
        "tags" : [ "v1vente" ],
        "summary" : "Enregistrement d'une vente",
        "description" : "Cette methode permet d'enregidtre ou de modifier une vente",
        "operationId" : "save_POST",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/VenteDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "L'objet vente creer ou modifier",
            "schema" : {
              "$ref" : "#/definitions/VenteDto"
            }
          },
          "404" : {
            "description" : "Erreur dans la creation de l'objet vente"
          }
        }
      }
    },
    "/v1/vente/{idVente}" : {
      "get" : {
        "summary" : "Rechercher une vente",
        "description" : "Cette methode permet de rechercher une vente par son ID",
        "operationId" : "findById_GET",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "L'objet vente a ete trouver dans la BDD",
            "schema" : {
              "$ref" : "#/definitions/VenteDto"
            }
          },
          "404" : {
            "description" : "Erreur l'objet vente n'a pas ete trouver dans la BDD avec l'ID fournie"
          }
        }
      }
    }
  },
  "definitions" : {
    "AdresseDto" : {
      "type" : "object",
      "properties" : {
        "adresse1" : {
          "type" : "string"
        },
        "adresse2" : {
          "type" : "string"
        },
        "ville" : {
          "type" : "string"
        },
        "codePostal" : {
          "type" : "string"
        },
        "pays" : {
          "type" : "string"
        }
      }
    },
    "ArticleDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "codeArticle" : {
          "type" : "string"
        },
        "designation" : {
          "type" : "string"
        },
        "prixUnitaireht" : {
          "type" : "number"
        },
        "tauxTva" : {
          "type" : "number"
        },
        "prixTtc" : {
          "type" : "number"
        },
        "photo" : {
          "type" : "string"
        },
        "category" : {
          "$ref" : "#/definitions/CategoryDto"
        },
        "creationDate" : {
          "type" : "integer",
          "format" : "int64"
        },
        "lastModifiedDate" : {
          "type" : "integer",
          "format" : "int64"
        },
        "entreprise" : {
          "$ref" : "#/definitions/EntrepriseDto"
        }
      }
    },
    "CategoryDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "code" : {
          "type" : "string"
        },
        "designation" : {
          "type" : "string"
        },
        "identreprise" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ChangerMotDePasseUtilisateurDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "motDePasse" : {
          "type" : "string"
        },
        "confirmMotDePasse" : {
          "type" : "string"
        }
      }
    },
    "ClientDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "nom" : {
          "type" : "string"
        },
        "prenom" : {
          "type" : "string"
        },
        "adresse" : {
          "$ref" : "#/definitions/AdresseDto"
        },
        "photo" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "numTel" : {
          "type" : "string"
        },
        "identreprise" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "CommandeClientDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "code" : {
          "type" : "string"
        },
        "dateCommande" : {
          "type" : "integer",
          "format" : "int64"
        },
        "etatcommande" : {
          "type" : "string",
          "enum" : [ "EN_PREPARATIOM", "VALIDEE", "LIVREE" ]
        },
        "client" : {
          "$ref" : "#/definitions/ClientDto"
        },
        "ligneCommandeClients" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LigneCommandeClientDto"
          }
        },
        "identreprise" : {
          "type" : "integer",
          "format" : "int32"
        },
        "commandeLivree" : {
          "type" : "boolean"
        }
      }
    },
    "CommandeFournisseurDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "code" : {
          "type" : "string"
        },
        "dateCommande" : {
          "type" : "integer",
          "format" : "int64"
        },
        "etatcommande" : {
          "type" : "string",
          "enum" : [ "EN_PREPARATIOM", "VALIDEE", "LIVREE" ]
        },
        "fournisseur" : {
          "$ref" : "#/definitions/FournisseurDto"
        },
        "ligneCommandeFournisseurs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LigneCommandeFournisseurDto"
          }
        },
        "identreprise" : {
          "type" : "integer",
          "format" : "int32"
        },
        "commandeLivree" : {
          "type" : "boolean"
        }
      }
    },
    "EntrepriseDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "nom" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "adresse" : {
          "$ref" : "#/definitions/AdresseDto"
        },
        "codeFiscal" : {
          "type" : "string"
        },
        "photo" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "numTel" : {
          "type" : "string"
        },
        "siteWeb" : {
          "type" : "string"
        },
        "utilisateurs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UtilisateurDto"
          }
        }
      }
    },
    "FournisseurDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "nom" : {
          "type" : "string"
        },
        "prenom" : {
          "type" : "string"
        },
        "adresse" : {
          "$ref" : "#/definitions/AdresseDto"
        },
        "photo" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "numTel" : {
          "type" : "string"
        },
        "identreprise" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "LigneCommandeClientDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "article" : {
          "$ref" : "#/definitions/ArticleDto"
        },
        "commandeClient" : {
          "$ref" : "#/definitions/CommandeClientDto"
        },
        "quantite" : {
          "type" : "number"
        },
        "prixUnitaire" : {
          "type" : "number"
        },
        "identreprise" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "LigneCommandeFournisseurDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "article" : {
          "$ref" : "#/definitions/ArticleDto"
        },
        "commandefournisseur" : {
          "$ref" : "#/definitions/CommandeFournisseurDto"
        },
        "quantite" : {
          "type" : "number"
        },
        "prixUnitaire" : {
          "type" : "number"
        },
        "identreprise" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "LigneVenteDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "vente" : {
          "$ref" : "#/definitions/VenteDto"
        },
        "article" : {
          "$ref" : "#/definitions/ArticleDto"
        },
        "quantite" : {
          "type" : "number"
        },
        "prixUnitaire" : {
          "type" : "number"
        },
        "identreprise" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "MvtStkDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "dateMvt" : {
          "type" : "integer",
          "format" : "int64"
        },
        "quantite" : {
          "type" : "number"
        },
        "article" : {
          "$ref" : "#/definitions/ArticleDto"
        },
        "typeMvt" : {
          "type" : "string",
          "enum" : [ "ENTRER", "SORTIE", "CORRECTION_POS", "CORRECTION_NEG" ]
        },
        "identreprise" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sourceMvt" : {
          "type" : "string",
          "enum" : [ "COMMANDE_CLIENT", "COMMANDE_FOURNISSEUR", "VENTE" ]
        }
      }
    },
    "RoleDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "roleNom" : {
          "type" : "string"
        },
        "utilisateur" : {
          "$ref" : "#/definitions/UtilisateurDto"
        }
      }
    },
    "UtilisateurDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "nom" : {
          "type" : "string"
        },
        "prenom" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "dateDeNaissance" : {
          "type" : "integer",
          "format" : "int64"
        },
        "motDePasse" : {
          "type" : "string"
        },
        "adresse" : {
          "$ref" : "#/definitions/AdresseDto"
        },
        "photo" : {
          "type" : "string"
        },
        "entreprise" : {
          "$ref" : "#/definitions/EntrepriseDto"
        },
        "roles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RoleDto"
          }
        }
      }
    },
    "VenteDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "code" : {
          "type" : "string"
        },
        "dateVente" : {
          "type" : "integer",
          "format" : "int64"
        },
        "commentaire" : {
          "type" : "string"
        },
        "ligneVentes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LigneVenteDto"
          }
        },
        "identreprise" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    }
  }
}